section.show-sec
  .inner
    .show-head
      .user-avatar
        = image_tag @user.avatar_url, class: "show-avatar"
      .user-manage
        h1= @user.name
        - if current_user == @user
          .user-menu
            = render 'user_menu'
        - else
          .follow-beside-avatar
            = render partial: 'follow_btn', locals: { follower: @user, url_part: "inshow"}
    .user-info
      .info-item
        dt Height
        dd= @user.display_height
      .info-item
        dt Latest
        dd= @user.display_latest
      .info-item
        dt 1mo. Change
        dd class="#{@user.change_class}"
          = @user.display_change
      .info-item
        dt 1mo. High
        dd= @user.display_max
      .info-item
        dt 1mo. Low
        dd= @user.display_min
      .info-item
        dt BMI
        dd= @user.bmi

    .tabs
      .tab-btns
        span.content1 記録履歴
        span.content2 グラフ
        span.content3 フォロワー
        #lamp.content1
      .tab-content
        .content1
          table.users-table
            thead.users-table-head
              tr
                th.weight-col Weight
                th.bmi-col BMI
                th Date
                - if @user == current_user
                  th.edit-col
            tbody.users-table-body
              = render partial: 'record_history', collection: @records, as: 'record'
        .content2
          canvas#myChart
        .content3.follower-grid
          = render partial: 'follower_list', collection: @followers, as: 'follower'

javascript:
  // showページタブ切り替え
  $('.tab-content>div').hide();
  $('.tab-content>div').first().slideDown();
  $('.tab-btns span').click(function(){
    var thisclass=$(this).attr('class');
    $('#lamp').removeClass().addClass('#lamp').addClass(thisclass);
    $('.tab-content>div').each(function(){
      if($(this).hasClass(thisclass)){
        $(this).fadeIn(800);
      }
      else{
        $(this).hide();
      }
    });
  });
  // チャート
  var ctx = document.getElementById("myChart").getContext('2d');
  var Graph = new Chart(ctx, {
    type: 'line',
    data: {
      labels: #{{@labels.to_json}},
      datasets: [
        {
          label: '過去1ヶ月の体重の変化',
          data: #{{@datas.to_json}},
          borderColor: 'rgba(255,0,0,1)',
          backgroundColor: 'rgba(0,0,0,0)'
        }
      ],
    },
    option: {
      title: {
        display: true,
        text: ''
      },
      scales: {
        xAxes: [{ //x軸設定
          type: 'time',
          time: {
            unit: 'day',
            distribution: 'liner'
          }
        }]
      },
    }
  });
